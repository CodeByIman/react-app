name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Déclenche le pipeline lors d'un push sur la branche main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Utilise une machine virtuelle Ubuntu

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Installer les dépendances Node.js
      - name: Install dependencies
        run: npm install

      # Étape 3 : Build du frontend React
      - name: Build application
        run: npm run build

      # Étape 4 : Construire l'image Docker
      - name: Build Docker image
        run: docker build -t imane1452/my-react-app:latest .

      # Étape 5 : Se connecter à Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Étape  : Pousser l'image Docker vers Docker Hub
      - name: Push Docker image
        run: docker push imane1452/my-react-app:latest

      # Étape 7 :onfigurer kubectl avec le fichier kubeconfig
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      # Étape 8 : Déployer su Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s-deployment.yaml --namespace=resismart-prod
          kubectl rollout status deployment/my-react-app --namespace=resismart-prod --timeout=2m